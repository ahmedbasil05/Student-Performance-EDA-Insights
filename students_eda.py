# -*- coding: utf-8 -*-
"""students_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oAMhG1SoEmYhPoNzfrocAQdth__s0UpG

**Student Scores Exploratory Data Analysis**

Importing Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Reading the Dataset"""

df = pd.read_csv('student_scores.csv')
df.head()

"""Data Exploration"""

df.info()

"""Statistical Analysis"""

df.describe()

"""Checking null values"""

df.isna().sum()

"""Deleting unnamed column"""

df.drop('Unnamed: 0', axis=1, inplace=True)
df.head()

"""Change WklyStudyHours column"""

df['WklyStudyHours'] = df['WklyStudyHours'].str.replace('05-Oct','5-10')
df.head()

"""Gender Distribution"""

sns.countplot(data= df, x= 'Gender', hue= 'Gender')
plt.title('Gender Distribution')
plt.show()

# from the above chart we have analysed that:
# the number of females in the data is more than the number of males

gb = df.groupby('ParentEduc').agg({'MathScore':'mean', 'ReadingScore':'mean'})
print(gb)

"""HeatMap - Parents Educ impact on Students"""

sns.heatmap(gb, annot=True)
plt.title('Parents Educ impact on Students')
plt.show()

# from the above chart we have concluded that:
  # education of parents have a good impact on their students

gb1 = df.groupby('ParentMaritalStatus').agg({'MathScore':'mean', 'ReadingScore':'mean','WritingScore':'mean'})
print(gb1)

"""Parents Marital Status impact on Students Scores"""

sns.heatmap(gb1, annot=True)
plt.title('Parents Marital Status impact on Students Scores')
plt.show()

# from the above chart we have concluded that :
# there is no/negligible impact on students scores due to their marital status

"""Detecting Outliers"""

sns.boxenplot(data= df, x= 'MathScore', hue='Gender')
plt.title('Maths Score Outliers')
plt.show()

"""Ethnic Group Unique Values"""

df['EthnicGroup'].unique()

"""Distribution of Ethnic Group"""

groupA = df.loc[df['EthnicGroup'] == 'group A'].count()
groupB = df.loc[df['EthnicGroup'] == 'group B'].count()
groupC = df.loc[df['EthnicGroup'] == 'group C'].count()
groupD = df.loc[df['EthnicGroup'] == 'group D'].count()
groupE = df.loc[df['EthnicGroup'] == 'group E'].count()

l = ['Group A','Group B', 'Group C', 'Group D', 'Group E']
m_list = [groupA['EthnicGroup'], groupB['EthnicGroup'], groupC['EthnicGroup'], groupD['EthnicGroup'], groupE['EthnicGroup']]
plt.pie(m_list, labels=l, autopct='%1.1f%%')
plt.title('Ethnic Group Distribution')
plt.show()

"""Checking Ethnic Group - Countplot"""

ax = sns.countplot(data= df, x= 'EthnicGroup')
ax.bar_label(ax.containers[0])
plt.title('Ethnic Group Distribution')
plt.show()

